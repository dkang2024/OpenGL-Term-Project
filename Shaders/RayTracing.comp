#version 460 core 

layout(local_size_x = 8, local_size_y = 4) in;
layout(rgba32f) uniform image2D screen;

// Sphere Structure and functions associated 

struct sphere3{
    vec3 center;
    float radius;
};

// Ray Structure and functions associated

struct ray3{
    vec3 origin;
    vec3 direction;
};

vec3 rayIntersectPoint(ray3 ray, float t){
    return ray.origin + ray.direction * t;
}

vec3 rayColor(ray3 ray){
    vec3 unitDirection = normalize(ray.direction);
    float a = 0.5 * (unitDirection.y + 1.0);
    return (1.0 - a) * vec3(1.0, 1.0, 1.0) + a * vec3(0.5, 0.7, 1.0);
}

// Main Function

void main(){
    vec4 pixel = vec4(0.0, 0.5, 0.0, 1.0);
    ivec2 pixelCoord = ivec2(gl_GlobalInvocationID.xy);
    imageStore(screen, pixelCoord, pixel);
}